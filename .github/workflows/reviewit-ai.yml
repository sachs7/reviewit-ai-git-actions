name: ReviewIt-AI

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  review:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GIT_TOKEN: ${{ secrets.GIT_TOKEN}}
      PR_NUMBER: ${{ github.event.number }}
      REPO: ${{ github.repository }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.5"
          cache: "pip"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt --quiet

      - name: Run ReviewIt-AI
        id: review
        run: |
          echo $REPO
          echo $PR_NUMBER
          echo "python .github/actions/reviewit.py -r $REPO -p $PR_NUMBER"
          python .github/actions/reviewit.py -r $REPO -p $PR_NUMBER
          # echo "OUTPUT=$(python .github/actions/reviewit.py -r $REPO -p $PR_NUMBER)" >> $GITHUB_OUTPUT
          # echo "::set-output name=output::$(python .github/actions/reviewit.py -r $REPO -p $PR_NUMBER)"
          
      # - name: Add PR Comment
      #   env:
      #     sac: ${{ steps.review.outputs.stdout }}
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: `${{env.sac}}`
      #       })
      - name: Add PR Comment
        uses: actions/github-script@v6
        with:
          script: |
            const { stdout, stderr } = require('process');
      
            let output = stdout.toString('utf-8');
            // Check for errors in the standard error stream
            const error = stderr.toString('utf-8').trim();
            if (error) {
              console.log("Error running the script:", error);
              output = "An error occurred while running the ReviewIt-AI script.";
            }
      
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
