name: ReviewIt-AI

on:
  pull_request:
  discussion_comment:

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
         repository: sachs7/reviewit-ai-git-actions
         token: ${{ secrets.GIT_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.5"
          cache: "pip"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt --quiet
      - name: Run ReviewIt-AI
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN}}
          PR_NUMBER: ${{ github.event.number }}
          REPO: ${{ github.repository }}
        run: |
          echo $REPO
          echo $PR_NUMBER
          echo "python .github/actions/reviewit.py -r $REPO -p $PR_NUMBER"
          python .github/actions/reviewit.py -r $REPO -p $PR_NUMBER
          
      - name: Add PR Comment
        uses: actions/github-script@v6
        env:
          URL: ${{ github.event.issue.comments_url }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
          run: |
            echo $URL
        with:
            run: |
              curl \
                -X POST \
                $URL \
                -H "Content-Type: application/json" \
                -H "Authorization: Bearer $GIT_TOKEN" \
                --data '{ "body": $GITHUB_OUTPUT }'
      
      # - name: Add comment
      #   env:
      #     OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      #     GIT_TOKEN: ${{ secrets.GIT_TOKEN}}
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: `${{env.SCRIPT_OUTPUT}}`
      #       })
